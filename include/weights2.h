#ifndef WEIGHTS2_H
#include <stdint.h>

// serving_default_conv2d_2_input:0
const int8_t serving_default_conv2d_2_input_0[] = {

    48, -90, 8, 64, 118, 2, 0, 0, 112, -91, 
    8, 64, 118, 2, 0, 0, -16, -61, 9, 64, 
    118, 2, 0, 0, -80, -86, 8, 64, 118, 2, 
    0, 0, 112, -90, 8, 64, 118, 2, 0, 0, 
    -16, -99, 8, 64, 118, 2, 0, 0, -80, 11, 
    10, 64, 118, 2, 0, 0, -16, -51, 9, 64, 
    118, 2, 0, 0, 
};

// sequential_2/flatten_2/Const
const int8_t sequential_2_flatten_2_Const[] = {

    -1, 72, 
};

// sequential_2/dense_1/BiasAdd/ReadVariableOp
const int32_t sequential_2_dense_1_BiasAdd_ReadVariableOp[] = {

    174, 169, 161, 190, 116, -313, 281, -560, 24, -63, 
};

// sequential_2/dense_1/MatMul
const int8_t sequential_2_dense_1_MatMul[] = {

    -27, -37, -8, -24, -4, -24, 5, 21, 38, 50, 
    -12, 13, 18, 46, -49, 35, 10, -65, 25, 55, 
    1, -28, 2, -55, -23, -66, 4, -7, 11, 0, 
    -67, 3, 0, -5, -18, -14, -79, 17, 34, -2, 
    -30, -50, 25, 48, -24, -2, -36, -21, 23, 16, 
    1, 18, 21, 13, -68, 6, -64, -59, -28, -30, 
    18, -87, 55, -64, -12, 39, -8, 7, -8, 14, 
    -4, 15, -53, -66, 27, -22, -32, -8, 34, -116, 
    -24, -87, 12, 37, 10, -88, -73, -26, -7, -28, 
    -83, -65, 21, -13, -3, -2, -20, -5, -4, 27, 
    18, 2, -37, -22, 26, -38, -2, 51, 46, 32, 
    -79, 21, 8, -34, -18, -47, 11, -58, 29, -3, 
    7, -28, 27, 6, -1, -17, -18, -31, 8, -29, 
    2, 59, 7, -3, -61, -37, -41, -51, -111, -53, 
    22, -67, 40, -66, 57, 44, -30, -8, -10, 24, 
    -31, 48, 36, -8, 23, 24, 2, 20, -40, -10, 
    3, -49, -15, -10, -15, -31, 31, -13, 15, -11, 
    -63, -28, -42, -5, 57, -19, -48, -47, 51, -36, 
    -31, 3, -27, 0, -5, 55, -24, -47, -16, -9, 
    42, 22, -7, 14, 17, 0, 50, -15, 7, 26, 
    -2, -14, -26, 11, 37, -80, 32, -41, -33, -96, 
    -69, -90, 49, -41, 30, -60, 56, 54, 3, 18, 
    -42, 18, 40, 60, 24, -10, 52, 26, -20, 30, 
    -23, 2, 24, 48, -19, -40, -5, 40, 18, 31, 
    -30, 6, -37, -74, -62, -42, 29, -16, -5, 28, 
    9, 26, -14, 0, -62, 3, -30, -50, -74, -8, 
    14, -28, -18, -17, -42, -13, -32, -44, -8, -57, 
    27, -17, 14, -48, 29, 21, -14, 38, 5, -10, 
    -1, 4, 55, 22, 35, -15, -11, -5, -72, -104, 
    28, -38, 19, -99, 46, -78, -32, -75, 0, -28, 
    -6, -79, 38, -37, -28, -49, 24, -37, -19, -74, 
    45, -36, 22, 2, 12, -3, 13, -21, -65, -13, 
    21, -46, 3, -16, 1, -33, 7, -34, -8, 13, 
    2, -8, 12, -8, -49, 9, 62, 23, -7, -4, 
    18, 37, -31, 42, 32, 12, 45, 31, 11, 6, 
    -84, 10, 30, 46, -38, -48, -17, 85, -2, 55, 
    17, -46, 25, -1, 28, 19, -86, -4, 28, 18, 
    -51, -31, -12, 6, -23, 40, 38, 58, -20, -12, 
    -48, 63, 7, 61, 29, 33, 3, -8, 30, 21, 
    -41, 52, 1, 39, -23, -1, -3, 24, -16, 1, 
    -36, -87, 11, 6, -7, -83, -44, -53, -13, -15, 
    -27, -5, 0, -17, 59, -4, -10, -34, -4, -6, 
    -37, -29, -22, -30, -11, 32, -27, -16, -7, -3, 
    -25, 2, -77, -75, -9, 11, 34, -12, 15, -32, 
    -20, 21, -61, -42, -9, -44, 50, -11, 3, 22, 
    -33, -54, -22, 8, 5, -25, -24, -57, -11, 23, 
    31, 6, -43, -47, -17, -27, -67, -26, -3, -30, 
    22, 15, -26, -89, -4, 0, 2, -33, -11, -52, 
    24, 0, 33, 37, 23, 28, -127, 17, 0, -28, 
    -9, 10, -5, 12, 15, -8, -29, -57, 60, 55, 
    13, -28, -35, -10, 11, 36, 8, -24, -6, 20, 
    55, 26, 4, 9, 18, 18, 8, 27, -45, -15, 
    -25, -9, 19, 16, 33, 20, -36, -10, -17, -14, 
    -23, -16, -23, -33, 19, -9, 1, -33, -15, -29, 
    7, -25, -11, 5, 17, 52, 4, -21, 11, 40, 
    -31, 21, -3, -34, 18, -10, -42, 21, 13, -43, 
    15, 70, 4, -14, -23, -4, -48, 48, 14, 59, 
    3, -37, -56, 70, -4, 21, 0, -51, -20, 15, 
    9, 28, -51, -45, -16, -28, 2, 9, 7, -5, 
    18, -14, -21, 19, -19, 8, 18, -62, -9, 1, 
    -31, -29, 7, 30, 3, 40, 48, -23, 13, -35, 
    -16, 5, -11, -24, -44, -5, 5, 27, -80, -57, 
    2, 30, 29, 14, -21, -4, 6, 6, -19, -14, 
    -92, -31, 11, 10, 2, -6, 7, 35, 3, 25, 
    -27, -16, 9, 12, 12, -115, 8, -15, 12, -31, 
    -17, 22, -7, -5, -55, -13, 6, -13, 15, -4, 
    17, 1, 12, -36, -43, -57, 6, 42, 11, -52, 
    -27, -34, 36, 6, 0, -3, -3, 10, -27, 29, 
    16, 37, 4, 7, 17, 16, -55, 18, 25, 3, 
    22, 23, 6, 24, 14, 39, -38, -27, -37, -32, 
    -55, -8, 47, -7, 4, 5, -6, -28, -12, 28, 
    -17, -13, -10, -25, 6, 13, -46, 7, -14, -28, 
};

// sequential_2/conv2d_2/BiasAdd/ReadVariableOp
const int32_t sequential_2_conv2d_2_BiasAdd_ReadVariableOp[] = {

    2580, 9497, -1331, 1196, -2660, 5659, 12775, 4123, 
};

// sequential_2/conv2d_2/Conv2D
const int8_t sequential_2_conv2d_2_Conv2D[] = {

    113, 127, 70, 18, 7, 2, -47, -98, -54, 48, 
    68, 117, 54, 19, 2, -82, -122, -127, 39, 54, 
    77, -127, -28, 100, -60, 63, 33, 6, 127, 57, 
    -56, 97, 36, -67, 9, 89, 45, 57, 56, 104, 
    127, 99, 12, 111, 84, 64, 119, 127, -10, -106, 
    17, -51, -84, 14, 69, -45, 6, 46, -127, -123, 
    20, 23, 120, 62, 104, 85, 34, 13, 10, -1, 
    -64, -127, 
};

// sequential_2/conv2d_2/Relu;sequential_2/conv2d_2/BiasAdd;sequential_2/conv2d_2/Conv2D;sequential_2/conv2d_2/BiasAdd/ReadVariableOp
const int8_t sequential_2_conv2d_2_Relu_sequential_2_conv2d_2_BiasAdd_sequential_2_conv2d_2_Conv2D_sequential_2_conv2d_2_BiasAdd_ReadVariableOp[] = {

    112, -76, 8, 64, 118, 2, 0, 0, -80, -76, 
    8, 64, 118, 2, 0, 0, 48, -109, 8, 64, 
    118, 2, 0, 0, 48, -54, -69, 63, 118, 2, 
    0, 0, -16, -97, 8, 64, 118, 2, 0, 0, 
    48, -96, 8, 64, 118, 2, 0, 0, -16, 47, 
    -48, 63, 118, 2, 0, 0, -80, 26, 10, 64, 
    118, 2, 0, 0, -80, -109, 8, 64, 118, 2, 
    0, 0, -80, -98, 8, 64, 118, 2, 0, 0, 
    -96, -41, 9, 64, 118, 2, 0, 0, -112, -60, 
    9, 64, 118, 2, 0, 0, -32, -45, 9, 64, 
    118, 2, 0, 0, 48, -68, 8, 64, 118, 2, 
    0, 0, 112, -68, 8, 64, 118, 2, 0, 0, 
    48, 6, 10, 64, 118, 2, 0, 0, -16, -74, 
    8, 64, 118, 2, 0, 0, 112, -112, -66, 63, 
    118, 2, 0, 0, -16, -106, 8, 64, 118, 2, 
    0, 0, -16, 21, 10, 64, 118, 2, 0, 0, 
    48, -105, 8, 64, 118, 2, 0, 0, 112, 6, 
    10, 64, 118, 2, 0, 0, 112, -96, 8, 64, 
    118, 2, 0, 0, 112, 28, -48, 99, 118, 2, 
    0, 0, 112, -105, 8, 64, 118, 2, 0, 0, 
    -64, -53, 9, 64, 118, 2, 0, 0, 48, -70, 
    8, 64, 118, 2, 0, 0, 48, -85, 8, 64, 
    118, 2, 0, 0, 112, 3, 10, 64, 118, 2, 
    0, 0, -80, 3, 10, 64, 118, 2, 0, 0, 
    -80, 12, 10, 64, 118, 2, 0, 0, 48, -76, 
    8, 64, 118, 2, 0, 0, -80, 6, 10, 64, 
    118, 2, 0, 0, 112, 55, -64, 63, 118, 2, 
    0, 0, -16, 13, 10, 64, 118, 2, 0, 0, 
    -96, -61, 9, 64, 118, 2, 0, 0, 
};

// sequential_2/max_pooling2d_2/MaxPool
const int8_t sequential_2_max_pooling2d_2_MaxPool[] = {

    64, -60, 9, 64, 118, 2, 0, 0, 48, -88, 
    8, 64, 118, 2, 0, 0, 48, -59, 9, 64, 
    118, 2, 0, 0, -80, -90, 8, 64, 118, 2, 
    0, 0, -16, 12, 10, 64, 118, 2, 0, 0, 
    48, 13, 10, 64, 118, 2, 0, 0, 112, -88, 
    8, 64, 118, 2, 0, 0, -80, -88, 8, 64, 
    118, 2, 0, 0, -80, -87, 8, 64, 118, 2, 
    0, 0, 
};

// sequential_2/flatten_2/Reshape
const int8_t sequential_2_flatten_2_Reshape[] = {

    -80, 79, -73, 63, 118, 2, 0, 0, 112, 5, 
    10, 64, 118, 2, 0, 0, 48, 1, 10, 64, 
    118, 2, 0, 0, -16, 29, 10, 64, 118, 2, 
    0, 0, 48, 30, 10, 64, 118, 2, 0, 0, 
    112, 12, 10, 64, 118, 2, 0, 0, 112, -97, 
    8, 64, 118, 2, 0, 0, 112, 1, 10, 64, 
    118, 2, 0, 0, -16, -70, 8, 64, 118, 2, 
    0, 0, 
};

// sequential_2/dense_1/MatMul;sequential_2/dense_1/BiasAdd
const int32_t sequential_2_dense_1_MatMul_sequential_2_dense_1_BiasAdd[] = {

    64, -60, 9, 64, 118, 2, 0, 0, 48, -88, 
};

// StatefulPartitionedCall:0
const int8_t StatefulPartitionedCall_0[] = {

    -80, -87, 8, 64, 118, 2, 0, 0, 64, -50, 
};

// 
const int8_t dummy_out[] = {

    64, -60, 9, 64, 118, 2, 0, 0, 48, -88, 
    8, 64, 118, 2, 0, 0, 48, -59, 9, 64, 
    118, 2, 0, 0, -80, -90, 8, 64, 118, 2, 
    0, 0, -16, 12, 10, 64, 118, 2, 0, 0, 
    48, 13, 10, 64, 118, 2, 0, 0, 112, -88, 
    8, 64, 118, 2, 0, 0, -80, -88, 8, 64, 
    118, 2, 0, 0, -80, -87, 8, 64, 118, 2, 
    0, 0, 64, -50, 9, 64, 118, 2, 0, 0, 
    112, 13, 10, 64, 118, 2, 0, 0, -64, -38, 
    9, 64, 118, 2, 0, 0, 48, -49, 9, 64, 
    118, 2, 0, 0, 48, 126, -69, 63, 118, 2, 
    0, 0, 48, 5, 10, 64, 118, 2, 0, 0, 
    -80, -70, 8, 64, 118, 2, 0, 0, -80, 79, 
    -73, 63, 118, 2, 0, 0, 112, 5, 10, 64, 
    118, 2, 0, 0, 48, 1, 10, 64, 118, 2, 
    0, 0, -16, 29, 10, 64, 118, 2, 0, 0, 
    48, 30, 10, 64, 118, 2, 0, 0, 112, 12, 
    10, 64, 118, 2, 0, 0, 112, -97, 8, 64, 
    118, 2, 0, 0, 112, 1, 10, 64, 118, 2, 
    0, 0, -16, -70, 8, 64, 118, 2, 0, 0, 
    48, -69, 8, 64, 118, 2, 0, 0, -80, 25, 
    10, 64, 118, 2, 0, 0, -16, 25, 10, 64, 
    118, 2, 0, 0, 48, 26, 10, 64, 118, 2, 
    0, 0, 112, 26, 10, 64, 118, 2, 0, 0, 
    112, -69, 8, 64, 118, 2, 0, 0, -80, -69, 
    8, 64, 118, 2, 0, 0, -16, -69, 8, 64, 
    118, 2, 0, 0, 112, -109, 8, 64, 118, 2, 
    0, 0, 48, -110, 8, 64, 118, 2, 0, 0, 
    112, -110, 8, 64, 118, 2, 0, 0, -16, 22, 
    10, 64, 118, 2, 0, 0, -80, -97, 8, 64, 
    118, 2, 0, 0, 48, -72, 8, 64, 118, 2, 
    0, 0, -80, -110, 8, 64, 118, 2, 0, 0, 
    -16, -56, -69, 63, 
};

#endif // WEIGHTS2_H
